// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SaudeIA.Data;

#nullable disable

namespace SaudeIA.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SaudeIA.Models.ContatosModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("DetalhesModelId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DetalhesModelId");

                    b.ToTable("ContatosModel");
                });

            modelBuilder.Entity("SaudeIA.Models.DetalhesModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("Airpot")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Beach")
                        .HasColumnType("boolean");

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Child")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Cleaning")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Coffee")
                        .HasColumnType("boolean");

                    b.Property<string>("Complement")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("Downtown")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Gym")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Highway")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Hospital")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Pets")
                        .HasColumnType("boolean");

                    b.Property<double?>("PetsTax")
                        .HasColumnType("double precision");

                    b.Property<bool?>("Swimming")
                        .HasColumnType("boolean");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("Wifi")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("SaudeIA.Models.FotosDetalhesModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Alt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("DetalhesModelId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DetalhesModelId");

                    b.ToTable("FotosDetalhesModel");
                });

            modelBuilder.Entity("SaudeIA.Models.ContatosModel", b =>
                {
                    b.HasOne("SaudeIA.Models.DetalhesModel", null)
                        .WithMany("Contacts")
                        .HasForeignKey("DetalhesModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SaudeIA.Models.FotosDetalhesModel", b =>
                {
                    b.HasOne("SaudeIA.Models.DetalhesModel", null)
                        .WithMany("Photos")
                        .HasForeignKey("DetalhesModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SaudeIA.Models.DetalhesModel", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
